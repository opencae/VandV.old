/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.1                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

Yp1 0.029443872;
Zp1 0.00128554721439753686;
Zm1 -0.00128554721439753686;

Yp2 0.044914381;
Zp2 0.00196100422461215889;
Zm2 -0.00196100422461215889;

Yp3 0.060883938;
Zp3 0.00265825014106338804;
Zm3 -0.00265825014106338804;

vertices
(
(0 0 0) // Vertex A0 = 0 
(0 $Yp1 $Zm1) // Vertex A1 = 1 
(0 $Yp1 $Zp1) // Vertex A2 = 2 

(1.016 0 0) // Vertex B0 = 3 
(1.016 $Yp1 $Zm1) // Vertex B1 = 4 
(1.016 $Yp1 $Zp1) // Vertex B2 = 5 

(0 $Yp2 $Zm2) // 6
(0 $Yp2 $Zp2) // 7

(1.016 $Yp2 $Zm2) // 8
(1.016 $Yp2 $Zp2) // 9

(0 $Yp3 $Zm3) // 10
(0 $Yp3 $Zp3) // 11

(1.016 $Yp3 $Zm3) // 12
(1.016 $Yp3 $Zp3) // 13
);

// Defining blocks:
blocks
(
    hex (0 3 4 1 0 3 5 2) (200 60 1) simpleGrading (50 1 1)
    hex (1 4 8 6 2 5 9 7) (200 30 1) simpleGrading (50 1 1)
    hex (6 8 12 10 7 9 13 11) (200 30 1) simpleGrading (50 1 1)
);

edges
(
);

// Defining patches:
boundary
(
    axis 
    {
    type symmetryPlane;
    faces
    (
     (0 3 3 0)
    );
    }

    inlet
    {	
        type            patch;
        faces
            (
	         (0 1 2 0)
	     );
    }	     
    outlet
    {
        type            patch;
        faces
    (
     (3 4 5 3)
     (4 8 9 5)
     (8 12 13 9)
    );
    }

    outerwall
    {
        type            wall;
        faces
    (
     (1 2 7 6)
     (6 7 11 10)
     (10 11 13 12)
    );
    }

    back 
    {
        type            wedge;
        faces
    (
     (0 1 4 3)
     (1 6 8 4)
     (6 10 12 8)
    );
    }

    front
    {
        type            wedge;
        faces
    (
     (2 0 3 5)
     (7 2 5 9)
     (11 7 9 13)
     );
    }
);

mergePatchPairs 
(
);

// ************************************************************************* //
