/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.0.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      sampleDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Set output format : choice of
//      xmgr
//      jplot
//      gnuplot
//      raw
setFormat raw;

// Surface output format. Choice of
//      null        : suppress output
//      foamFile    : separate points, faces and values file
//      dx          : DX scalar or vector format
//      vtk         : VTK ascii format
//      raw         : x y z value format for use with e.g. gnuplot 'splot'.
//      stl         : ascii stl. Does not contain values!
surfaceFormat raw;

// interpolationScheme. choice of
//	cell          : use cell-centre value only; constant over cells (default)
//	cellPoint     : use cell-centre and vertex values
//	cellPointFace : use cell-centre, vertex and face values.
// 1] vertex values determined from neighbouring cell-centre values
// 2] face values determined using the current face interpolation scheme
//    for the field (linear, gamma, etc.)
//interpolationScheme cell;
interpolationScheme cellPointFace;

// Fields to sample.
fields
(
   k
   magU
);

// Set sampling definition: choice of
//      uniform             evenly distributed points on line
//      face                one point per face intersection
//      midPoint            one point per cell, inbetween two face intersections
//      midPointAndFace     combination of face and midPoint
//
//      curve               specified points, not nessecary on line, uses
//                          tracking
//      cloud               specified points, uses findCell
//
// axis: how to write point coordinate. Choice of
// - x/y/z: x/y/z coordinate only
// - xyz: three columns
//  (probably does not make sense for anything but raw)
// - distance: distance from start of sampling line (if uses line) or
//             distance from first specified sampling point
//
// type specific:
//      uniform, face, midPoint, midPointAndFace : start and end coordinate
//      uniform: extra number of sampling points
//      curve, cloud: list of coordinates
sets
(
    horizontal
    {
      type cloud;
      axis xyz;
      points
	(
(-0.30  0.25  0.02 )
(-0.30  0.20  0.02 )
(-0.30  0.15  0.02 )
(-0.30 -0.15  0.02 )
(-0.30 -0.20  0.02 )
(-0.30 -0.25  0.02 )
(-0.25  0.30  0.02 )
(-0.25  0.25  0.02 )
(-0.25  0.20  0.02 )
(-0.25  0.15  0.02 )
(-0.25  0.10  0.02 )
(-0.25  0.05  0.02 )
(-0.25  0.00  0.02 )
(-0.25 -0.05  0.02 )
(-0.25 -0.10  0.02 )
(-0.25 -0.15  0.02 )
(-0.25 -0.20  0.02 )
(-0.25 -0.25  0.02 )
(-0.25 -0.30  0.02 )
(-0.20  0.30  0.02 )
(-0.20  0.25  0.02 )
(-0.20  0.20  0.02 )
(-0.20  0.15  0.02 )
(-0.20  0.10  0.02 )
(-0.20  0.05  0.02 )
(-0.20  0.00  0.02 )
(-0.20 -0.05  0.02 )
(-0.20 -0.10  0.02 )
(-0.20 -0.15  0.02 )
(-0.20 -0.20  0.02 )
(-0.20 -0.25  0.02 )
(-0.20 -0.30  0.02 )
(-0.15  0.30  0.02 )
(-0.15  0.25  0.02 )
(-0.15  0.20  0.02 )
(-0.15  0.15  0.02 )
(-0.15  0.10  0.02 )
(-0.15  0.05  0.02 )
(-0.15  0.00  0.02 )
(-0.15 -0.05  0.02 )
(-0.15 -0.10  0.02 )
(-0.15 -0.15  0.02 )
(-0.15 -0.20  0.02 )
(-0.15 -0.25  0.02 )
(-0.15 -0.30  0.02 )
(-0.10  0.25  0.02 )
(-0.10  0.20  0.02 )
(-0.10  0.15  0.02 )
(-0.10 -0.15  0.02 )
(-0.10 -0.20  0.02 )
(-0.10 -0.25  0.02 )
(-0.05  0.25  0.02 )
(-0.05  0.20  0.02 )
(-0.05  0.15  0.02 )
(-0.05 -0.15  0.02 )
(-0.05 -0.20  0.02 )
(-0.05 -0.25  0.02 )
( 0.00  0.25  0.02 )
( 0.00  0.20  0.02 )
( 0.00  0.15  0.02 )
( 0.00 -0.15  0.02 )
( 0.00 -0.20  0.02 )
( 0.00 -0.25  0.02 )
( 0.05  0.25  0.02 )
( 0.05  0.20  0.02 )
( 0.05  0.15  0.02 )
( 0.05 -0.15  0.02 )
( 0.05 -0.20  0.02 )
( 0.05 -0.25  0.02 )
( 0.10  0.25  0.02 )
( 0.10  0.20  0.02 )
( 0.10  0.15  0.02 )
( 0.10 -0.15  0.02 )
( 0.10 -0.20  0.02 )
( 0.10 -0.25  0.02 )
( 0.15  0.30  0.02 )
( 0.15  0.25  0.02 )
( 0.15  0.20  0.02 )
( 0.15  0.15  0.02 )
( 0.15  0.10  0.02 )
( 0.15  0.05  0.02 )
( 0.15  0.00  0.02 )
( 0.15 -0.05  0.02 )
( 0.15 -0.10  0.02 )
( 0.15 -0.15  0.02 )
( 0.15 -0.20  0.02 )
( 0.15 -0.25  0.02 )
( 0.15 -0.30  0.02 )
( 0.20  0.30  0.02 )
( 0.20  0.25  0.02 )
( 0.20  0.20  0.02 )
( 0.20  0.15  0.02 )
( 0.20  0.10  0.02 )
( 0.20  0.05  0.02 )
( 0.20  0.00  0.02 )
( 0.20 -0.05  0.02 )
( 0.20 -0.10  0.02 )
( 0.20 -0.15  0.02 )
( 0.20 -0.200001  0.02 ) //occur a error by -0.2 
( 0.20 -0.25  0.02 )
( 0.20 -0.30  0.02 )
( 0.25  0.30  0.02 )
( 0.25  0.25  0.02 )
( 0.25  0.20  0.02 )
( 0.25  0.15  0.02 )
( 0.25  0.10  0.02 )
( 0.25  0.05  0.02 )
( 0.25  0.00  0.02 )
( 0.25 -0.05  0.02 )
( 0.25 -0.10  0.02 )
( 0.25 -0.15  0.02 )
( 0.25 -0.20  0.02 )
( 0.25 -0.25  0.02 )
( 0.25 -0.30  0.02 )
( 0.30  0.25  0.02 )
( 0.30  0.20  0.02 )
( 0.30  0.15  0.02 )
( 0.30 -0.15  0.02 )
( 0.30 -0.20  0.02 )
( 0.30 -0.25  0.02 )
	 );
    }

);

surfaces ();

// *********************************************************************** //
