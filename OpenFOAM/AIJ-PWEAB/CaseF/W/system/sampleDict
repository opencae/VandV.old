/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;
    class           dictionary;
    location        system;
    object          sampleDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Set output format : choice of
//      xmgr
//      jplot
//      gnuplot
//      raw
setFormat raw;

// Surface output format. Choice of
//      null        : suppress output
//      foamFile    : separate points, faces and values file
//      dx          : DX scalar or vector format
//      vtk         : VTK ascii format
//      raw         : x y z value format for use with e.g. gnuplot 'splot'.
//      stl         : ascii stl. Does not contain values!
surfaceFormat foamFile;

// interpolationScheme. choice of
//	cell          : use cell-centre value only; constant over cells (default)
//	cellPoint     : use cell-centre and vertex values
//	cellPointFace : use cell-centre, vertex and face values.
// 1] vertex values determined from neighbouring cell-centre values
// 2] face values determined using the current face interpolation scheme
//    for the field (linear, gamma, etc.)
//interpolationScheme cell;
//interpolationScheme cellPoint;
interpolationScheme cellPointFace;

// Fields to sample.
fields
(
    U
    k
);

// Set sampling definition: choice of
//      uniform             evenly distributed points on line
//      face                one point per face intersection
//      midPoint            one point per cell, inbetween two face intersections
//      midPointAndFace     combination of face and midPoint
//
//      curve               specified points, not nessecary on line, uses
//                          tracking
//      cloud               specified points, uses findCell
//
// axis: how to write point coordinate. Choice of
// - x/y/z: x/y/z coordinate only
// - xyz: three columns
//  (probably does not make sense for anything but raw)
// - distance: distance from start of sampling line (if uses line) or
//             distance from first specified sampling point
//
// type specific:
//      uniform, face, midPoint, midPointAndFace : start and end coordinate
//      uniform: extra number of sampling points
//      curve, cloud: list of coordinates
sets
(

    measuringPoints
    {
        type cloud;
        axis xyz;
        points          
        (
          ( 268.6 364.1 10  ) // 1 
          ( 165.4 299.3 10  ) // 2 
          ( 20.7 343.4 10  ) // 3 
          ( 40.5 304.1 10  ) // 4 
          ( 1.2 220.3 10  ) // 5 
          ( -81.9 164.7 10  ) // 6 
          ( -128.7 194.6 10  ) // 7 
          ( -195.4 181.0 10  ) // 8 
          ( -263.7 293.8 10  ) // 9 
          ( -93.6 -493.6 10  ) // 10 
          ( 51.4 143.0 10  ) // 11 
          ( 81.3 284.7 10  ) // 12 
          ( -50.2 87.5 10  ) // 13 
          ( -78.3 77.3 10  ) // 14 
          ( -169.5 61.2 10  ) // 15 
          ( 101.4 258.3 10  ) // 16 
          ( 178.8 230.8 10  ) // 17 
          ( 263.4 204.3 10  ) // 18 
          ( 228.1 81.7 10  ) // 19 
          ( 124.8 7.6 10  ) // 20 
          ( 97.3 -12.9 10  ) // 21 
          ( 50.0 -36.9 10  ) // 22 
          ( 42.6 -199.4 10  ) // 23 
          ( 148.3 -288.2 10  ) // 24 
          ( 170.0 -387.6 10  ) // 25 
          ( 38.2 -411.1 10  ) // 26 
          ( -90.3 -255.2 10  ) // 27 
          ( -81.4 -27.0 10  ) // 28 
          ( -201.4 -55.2 10  ) // 29 
          ( -191.8 28.4 10  ) // 30 
          ( -324.4 83.4 10  ) // 31 
          ( -351.0 37.7 10  ) // 32 
          ( -317.8 439.2 10  ) // 33 
          ( 85.8 -347.1 192  ) // 34 
          ( -17.5 96.0 242  ) // 35 
        );
    }
);


// Surface sampling definition: choice of
//      plane : values on plane defined by point, normal.
//      patch : values on patch.
//
// 1] planes are triangulated by default
// 2] patches are not triangulated by default
surfaces
(
);

// *********************************************************************** //
